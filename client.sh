#!/bin/bash
# Ensure the script is run as sudo
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit
fi

# Request for user input in bash script for password and save to PASSWORD variable
read -p "Please enter your elasticsearch password: " PASSWORD

# Encode the elastic user credentials
AUTHORIZATION=$(echo -n "elastic:$PASSWORD" | base64)
echo -n "elastic:$PASSWORD"
echo
echo "$AUTHORIZATION"

read -p "Please enter your elasticsearch server IP: " IP


# Function to wait for the dpkg lock
wait_for_dpkg_lock() {
    while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 || sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
        echo "Waiting for other package manager to finish..."
        sleep 10
    done
}

# Stop unattended-upgrades service to prevent automatic updates
stop_unattended_upgrades() {
    sudo systemctl stop unattended-upgrades
    sudo systemctl disable unattended-upgrades
}

# Start unattended-upgrades service after script completion
start_unattended_upgrades() {
    sudo systemctl enable unattended-upgrades
    sudo systemctl start unattended-upgrades
}

stop_unattended_upgrades

wait_for_dpkg_lock
sudo apt update
wait_for_dpkg_lock
sudo apt install -y curl auditd jq

# Create Client policy using the provided curl command
curl --location 'http://'$IP'/api/fleet/agent_policies?sys_monitoring=true' \
    --header 'Accept: */*' \
    --header 'Content-Type: application/json' \
    --header 'Cache-Control: no-cache' \
    --header 'kbn-xsrf: xxx' \
    --header 'Connection: keep-alive' \
    --header 'Authorization: Basic '$AUTHORIZATION'' \
    --data '{"id":"agent-policy","name":"Client Policy","description":"Client policy generated by Kibana","namespace":"default","monitoring_enabled":["logs","metrics"]}'

sleep 40

# Get the Enrollment Token from the client policy
ENROLLMENT_TOKEN=$(curl --request GET \
  --url 'http://'$IP'/api/fleet/enrollment_api_keys' \
  --header 'Authorization: Basic '$AUTHORIZATION'' \
  --header 'Content-Type: application/json' \
  --header 'kbn-xsrf: xx' | jq -r '.list[] | select(.policy_id == "agent-policy") | .api_key')

cd /tmp
curl -L -O https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-8.14.3-linux-x86_64.tar.gz
tar xzvf elastic-agent-8.14.3-linux-x86_64.tar.gz
cd elastic-agent-8.14.3-linux-x86_64
sudo yes | sudo ./elastic-agent install --url=https://$IP:8220 --enrollment-token=$ENROLLMENT_TOKEN --insecure

# Define the target file path
AUDIT_RULES_FILE="/etc/audit/rules.d/audit.rules"

# Overwrite the audit.rules file with the desired content
cat << EOF | sudo tee $AUDIT_RULES_FILE > /dev/null
## This file is automatically generated from /etc/audit/rules.d
-D
-b 8192
-f 1
--backlog_wait_time 60000
-a exit,always -F arch=b64 -S execve
-a exit,always -F arch=b32 -S execve
EOF

# Restart the auditd service to apply the changes
sudo systemctl restart auditd

# Enable the auditd service to start on boot
sudo systemctl enable auditd

# Installation completed
echo "Installation completed successfully"